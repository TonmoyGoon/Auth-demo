{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\React-JS-Course\\\\Handling-mail_and_password\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false); // this useEffect will run only when either enteredEmail/enteredPassword is changed\n\n  useEffect(() => {\n    setTimeout(() => {\n      console.log(\"useEffect executed\");\n      setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6);\n    }, 1000);\n\n    const emailChangeHandler = event => {\n      setEnteredEmail(event.target.value);\n    };\n\n    const passwordChangeHandler = event => {\n      setEnteredPassword(event.target.value);\n    };\n\n    const validateEmailHandler = () => {\n      setEmailIsValid(enteredEmail.includes('@'));\n    };\n\n    const validatePasswordHandler = () => {\n      setPasswordIsValid(enteredPassword.trim().length > 6);\n    };\n\n    const submitHandler = event => {\n      event.preventDefault();\n      props.onLogin(enteredEmail, enteredPassword);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.login,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"E-Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: enteredEmail,\n            onChange: emailChangeHandler,\n            onBlur: validateEmailHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: enteredPassword,\n            onChange: passwordChangeHandler,\n            onBlur: validatePasswordHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: classes.btn,\n            disabled: !formIsValid,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  });\n};\n\n_s(Login, \"LXbrkIlmixekYK8sfxwnk7twvaE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Card","classes","Button","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","setTimeout","console","log","includes","trim","length","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["C:/Users/ACER/Desktop/React-JS-Course/Handling-mail_and_password/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  // this useEffect will run only when either enteredEmail/enteredPassword is changed\n  useEffect(() => {\n    setTimeout(() => {\n      console.log(\"useEffect executed\");\n      setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6)\n    }, 1000)\n\n    const emailChangeHandler = (event) => {\n      setEnteredEmail(event.target.value);\n    };\n\n    const passwordChangeHandler = (event) => {\n      setEnteredPassword(event.target.value);\n    };\n\n    const validateEmailHandler = () => {\n      setEmailIsValid(enteredEmail.includes('@'));\n    };\n\n    const validatePasswordHandler = () => {\n      setPasswordIsValid(enteredPassword.trim().length > 6);\n    };\n\n    const submitHandler = (event) => {\n      event.preventDefault();\n      props.onLogin(enteredEmail, enteredPassword);\n    };\n\n    return (\n      <Card className={classes.login}>\n        <form onSubmit={submitHandler}>\n          <div\n            className={`${classes.control} ${emailIsValid === false ? classes.invalid : ''\n              }`}\n          >\n            <label htmlFor=\"email\">E-Mail</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={enteredEmail}\n              onChange={emailChangeHandler}\n              onBlur={validateEmailHandler}\n            />\n          </div>\n          <div\n            className={`${classes.control} ${passwordIsValid === false ? classes.invalid : ''\n              }`}\n          >\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={enteredPassword}\n              onChange={passwordChangeHandler}\n              onBlur={validatePasswordHandler}\n            />\n          </div>\n          <div className={classes.actions}>\n            <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n              Login\n            </Button>\n          </div>\n        </form>\n      </Card>\n    )\n  }\n  )\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}